{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userContants.js","constants/orderConstants.js","reduxStore/index.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/ProductCard.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen/OrderScreen.js","screens/UserListScreen/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_RESET","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_RESET","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_INFO_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","rootReducer","combineReducers","productList","state","products","action","type","loading","payload","currentPage","totalPages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","itemAdd","itemExist","find","cartItem","map","filter","el","i","arr","id","data","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsLocalStorage","localStorage","getItem","JSON","parse","userInfoLocalStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","isAdminFilter","useLocation","pathname","includes","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","dispatch","getState","a","config","headers","Authorization","token","axios","get","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","clear","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","ProductCard","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","getProductDetails","updateProduct","productData","put","toast","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","getFilterUrl","userFilterNoKeyword","userFilterWithKeyword","adminFilterNoKeyword","adminFilterWithKeyword","Pagination","Array","keys","x","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","keywordUserParam","params","pageNumberParam","length","index","sm","md","lg","xl","ProductScreen","props","qty","setQty","setRating","comment","setComment","loadingProductReviewCreate","successProductReviewCreate","goBack","ListGroup","countInStock","padding","disabled","review","xs","createdAt","substring","letterSpacing","productId","post","errorMessage","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","productID","location","search","Number","split","removeFromCartHandler","reduce","acc","item","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","header","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","autoFocus","getOrderDetails","orderId","ProfileScreen","loadingUserDetails","errorUserDetails","loadingUpdateProfile","errorUpdateProfile","loadingOrderListMy","errorOrderListMy","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","rounded","orderData","orderItems","OrderScreen","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","errorDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","userDeleteLoading","userDeleteError","userDeleteSuccess","userDeleteHandler","userId","confirm","delete","deleteUser","borderWidth","UserEditScreen","userUpdateLoading","userUpdateError","userUpdateSuccess","setIsAdmin","class","userData","ProductListScreen","KeywordAdminParam","productDeleteLoading","productDeleteError","productDeleteSuccess","productCreated","productCreateLoading","productCreateError","productCreateSuccess","productDeleteHandler","deleteProduct","category","brand","ProductEditScreen","setProductData","uploading","setUploading","productUpdateLoading","productUpdateError","productUpdateSuccess","productDataOnChangeHandler","submitHandler","file","getElementById","files","formData","FormData","append","filePath","File","OrderListScreen","App","position","autoClose","path","component","exact","ReactDOM"],"mappings":"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","file":"static/js/main.6537af57.chunk.js","sourcesContent":["// Use inside lifecycle of HomeScreen Componet\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\nexport const PRODUCT_LIST_RESET = 'PRODUCT_LIST_RESET';\r\n\r\n// Use inside lifecycle of ProductScreen Componet\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET';\r\n\r\n// Use inside productListScreen Componet\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\nexport const PRODUCT_DELETE_RESET = 'PRODUCT_DELETE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n\r\nexport const CART_INFO_RESET = 'CART_INFO_RESET';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_REST';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from '../reducers/productReducers';\r\nimport { cartReducer } from '../reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from '../reducers/userReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderPayReducer,\r\n} from '../reducers/orderReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsLocalStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoLocalStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst shippingAdressLocalStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsLocalStorage,\r\n    shippingAddress: shippingAdressLocalStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_LIST_RESET,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_RESET,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants.js';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        currentPage: action.payload.currentPage,\r\n        totalPages: action.payload.totalPages,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_LIST_RESET:\r\n      return { products: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_DETAILS_RESET:\r\n      return { product: { reviews: [] } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_DELETE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_INFO_RESET,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  //----------------------------------cartItems: {...productInfo, product: objectID, quantity}[]\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      // item that we wanna add to cart\r\n      const itemAdd = action.payload;\r\n      // return item is existing in cart / or not\r\n      const itemExist = state.cartItems.find(\r\n        (cartItem) => cartItem.product === itemAdd.product\r\n      );\r\n\r\n      if (itemExist) {\r\n        // itemAdd alredy existing cartItems\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((cartItem) => {\r\n            //-> we will update info cartItem at that index (ex: update quantity of cardItem)\r\n            return cartItem.product === itemAdd.product ? itemAdd : cartItem;\r\n          }),\r\n        };\r\n      } else {\r\n        // if itemAdd not existing in cartItems -> just push it in cartItems\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, itemAdd],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((el, i, arr) => {\r\n          return el.product !== action.payload.id;\r\n        }),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload.data,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload.data,\r\n      };\r\n\r\n    case CART_INFO_RESET:\r\n      return {\r\n        cartItems: [],\r\n        shippingAddress: {},\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userContants.js';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// used to show user info on forms\r\n// user profile screen & admin edit user screen\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_RESET,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_DETAILS_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nconst orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst orderDetailsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_RESET:\r\n      return { orders: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst orderListMyReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListReducer,\r\n  orderListMyReducer,\r\n  orderDeliverReducer,\r\n};\r\n","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const location = useLocation();\r\n  const isAdminFilter = location.pathname.includes('/admin/productlist');\r\n\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      isAdminFilter\r\n        ? history.push(`/admin/productlist/search/${keyword}`)\r\n        : history.push(`/search/${keyword}`);\r\n    } else {\r\n      isAdminFilter ? history.push(`/admin/productlist`) : history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p2'>\r\n        SEARCH\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userContants';\r\nimport axios from 'axios';\r\nimport {\r\n  ORDER_DETAILS_RESET,\r\n  ORDER_LIST_MY_RESET,\r\n} from '../constants/orderConstants';\r\nimport { toast } from 'react-toastify';\r\nimport { CART_INFO_RESET } from '../constants/cartConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // send email, password to login route in server\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    // dispatch action for save userInfo in redux state (state.userLogin)\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    // save userInfo after login success\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    // there are 2 kind of error\r\n    // 1. error from client, network error ( -> use error.message)\r\n    // 2. error response from backend server (http error response) (-> use error.response.data)\r\n\r\n    // if err dispatch action to save err in redux state\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// logout action\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.clear();\r\n  dispatch({ type: CART_INFO_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: ORDER_DETAILS_RESET });\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\n// register action\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // send email, password to login route in server\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    // dispatch action for save userInfo in redux state (state.userLogin)\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    // save userInfo after login success\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    // if err dispatch action to save err in redux state\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// get user details action\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    if (id === 'profile') {\r\n      // call route /api/users/profile -> get user details of user login (ProfileScreen)\r\n      const { data } = await axios.get('/api/users/profile', config);\r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } else {\r\n      // call route /api/users/:id -> admin get user details of any user (UserEditScreen)\r\n      const { data } = await axios.get(`/api/users/${id}`, config);\r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    // if err dispatch action to save err in redux state\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update user profile action\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    // Dispatch action for save user info in redux state (reduxState.userUpdateProfile)\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n\r\n    // After update user info success, we must update userInfo in others field of reduxState & localStorage\r\n    // update reduxState.userLogin -> This help update user_name in Navbar\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    // userLogin info must persistent storage in localstorage\r\n    //This will help reduxState.userLogin updated after page reload\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    // update reduxState.userDetails -> This help update info of form in ProfileScreen;\r\n    const userDetails = { ...data };\r\n    delete userDetails.token;\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: userDetails });\r\n  } catch (error) {\r\n    // if err dispatch action to save err in redux state\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getListUser = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/`, config);\r\n\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    const { data } = await axios.delete(`/api/users/${userId}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n    toast.success('User deleted successfully!');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    const { data } = await axios.put(\r\n      `/api/users/${userData._id}`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n    toast.success('User updated successfully!');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Proshop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n\r\n      <span className='pl-1'>{text ? text : ''}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\n\r\nexport default Rating;\r\n","import { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst ProductCard = ({ product }) => {\r\n  return (\r\n    <Card className='p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import axios from 'axios';\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const listProducts =\r\n  ({ keyword = '', pageNumber = 1 }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      // there are 2 kind of error\r\n      // 1. error from client, network err -> (use error.message)\r\n      // 2. error response from backend server (http err response) -> (use error.response.data)\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // call api delete product by id to backend server\r\n    // eslint-disable-next-line\r\n    const { data } = await axios.delete(`/api/products/${productId}`, config);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    toast.success('Delete product successfully');\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // call api create product to backend server\r\n    const { data } = await axios.post(`/api/products/`, {}, config);\r\n\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data.product });\r\n\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (productData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // call api update product to backend server\r\n    const { data } = await axios.put(\r\n      `/api/products/${productData._id}`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data.product });\r\n    toast.success('Update product successfully');\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      // eslint-disable-next-line\r\n      const { data } = await axios.post(\r\n        `/api/products/${productId}/reviews`,\r\n        review,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS, payload: data.product });\r\n      toast.success('Review submitted successfully');\r\n    } catch (err) {\r\n      const errorMessage =\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message;\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: errorMessage,\r\n      });\r\n\r\n      toast.error(errorMessage);\r\n    }\r\n  };\r\n\r\nexport const getTopRatingProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({\r\n  totalPages,\r\n  currentPage,\r\n  keyword = '',\r\n  isAdmin = false,\r\n}) => {\r\n  const getFilterUrl = (pageNumber) => {\r\n    const userFilterNoKeyword = `/page/${pageNumber}`;\r\n    const userFilterWithKeyword = `/search/${keyword}/page/${pageNumber}`;\r\n    const adminFilterNoKeyword = `/admin/productlist/page/${pageNumber}`;\r\n    const adminFilterWithKeyword = `/admin/productlist/search/${keyword}/page/${pageNumber}`;\r\n\r\n    if (!isAdmin) {\r\n      if (!keyword) {\r\n        return userFilterNoKeyword;\r\n      } else {\r\n        return userFilterWithKeyword;\r\n      }\r\n    } else {\r\n      if (!keyword) {\r\n        return adminFilterNoKeyword;\r\n      } else {\r\n        return adminFilterWithKeyword;\r\n      }\r\n    }\r\n  };\r\n  return totalPages > 1 ? (\r\n    <Pagination>\r\n      {[...Array(totalPages).keys()].map((x) => (\r\n        <LinkContainer key={x + 1} to={getFilterUrl(x + 1)}>\r\n          <Pagination.Item active={x + 1 === currentPage}>\r\n            {x + 1}\r\n          </Pagination.Item>\r\n        </LinkContainer>\r\n      ))}\r\n    </Pagination>\r\n  ) : null;\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { getTopRatingProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopRatingProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n};\r\n\r\nexport default Meta;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport ProductCard from '../components/ProductCard';\r\nimport { listProducts } from '../actions/productActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\n\r\nconst HomeScreen = ({ match, history }) => {\r\n  const keywordUserParam = match.params.keyword || '';\r\n  const pageNumberParam = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, currentPage, totalPages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      listProducts({ keyword: keywordUserParam, pageNumber: pageNumberParam })\r\n    );\r\n  }, [dispatch, keywordUserParam, pageNumberParam]);\r\n\r\n  return (\r\n    <>\r\n      {!keywordUserParam ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <div\r\n          className='btn btn-light'\r\n          onClick={() => {\r\n            history.push('/');\r\n          }}\r\n        >\r\n          <i className='fas fa-arrow-left'></i> Go Back\r\n        </div>\r\n      )}\r\n      <h1>Lasted Product</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : products.length === 0 ? (\r\n        <Message variant='info'>There are no product</Message>\r\n      ) : (\r\n        <>\r\n          <Meta />\r\n          <Row>\r\n            {products.map((product, index, arr) => {\r\n              return (\r\n                <Col\r\n                  className='my-3'\r\n                  sm={12}\r\n                  md={6}\r\n                  lg={4}\r\n                  xl={3}\r\n                  key={product._id}\r\n                >\r\n                  <ProductCard product={product} />\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n          <Paginate\r\n            totalPages={totalPages}\r\n            currentPage={currentPage}\r\n            keyword={keywordUserParam}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Meta from '../components/Meta';\r\nimport {\r\n  getProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nconst ProductScreen = (props) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReviewCreate,\r\n    success: successProductReviewCreate,\r\n  } = productReviewCreate;\r\n\r\n  // dispatch getProductDetails Action\r\n  // to fetch single product from server and save in redux state (loading, error, product)\r\n  useEffect(() => {\r\n    if (successProductReviewCreate) {\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n    dispatch(getProductDetails(props.match.params.id));\r\n  }, [dispatch, props.match, successProductReviewCreate]);\r\n\r\n  const AddToCartHandler = () => {\r\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(props.match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={`${product.name}`} />\r\n          <div\r\n            className='btn btn-light my-3'\r\n            onClick={() => {\r\n              props.history.goBack();\r\n            }}\r\n          >\r\n            <i className='fas fa-arrow-left'></i> Go Back\r\n          </div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid='true' />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <p className='font-weight-bold'>{product.name}</p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  ></Rating>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup fluid='true'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In stock' : 'Out of stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            style={{ padding: 0 }}\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock)].map(\r\n                              (el, index, arr) => {\r\n                                return (\r\n                                  <option key={index + 1} value={index + 1}>\r\n                                    {index + 1}\r\n                                  </option>\r\n                                );\r\n                              }\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Button\r\n                        className='btn-block'\r\n                        type='button'\r\n                        disabled={product.countInStock === 0}\r\n                        onClick={AddToCartHandler}\r\n                      >\r\n                        Add to card\r\n                      </Button>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {loadingProductReviewCreate && <Loader />}\r\n              {product.reviews.length === 0 && (\r\n                <Message>There are no reviews</Message>\r\n              )}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <Row>\r\n                      <Col xs={4}>\r\n                        <span className='font-weight-bold'>User</span>:\r\n                      </Col>\r\n                      <Col xs={8}>\r\n                        <strong>{review.name}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={4}>\r\n                        <span className='font-weight-bold'>Rating:</span>\r\n                      </Col>\r\n                      <Col xs={8}>\r\n                        <Rating value={review.rating} />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={4}>\r\n                        <span className='font-weight-bold'>Create at:</span>\r\n                      </Col>\r\n                      <Col xs={8}>\r\n                        <p className='m-0'>\r\n                          {review.createdAt.substring(0, 10)}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={4}>\r\n                        <span className='font-weight-bold'>Review:</span>\r\n                      </Col>\r\n                      <Col xs={12}>\r\n                        <p\r\n                          className='text-body px-1 m-0'\r\n                          style={{ letterSpacing: 'normal' }}\r\n                        >\r\n                          {review.comment}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a customer Review</h2>\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReviewCreate}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\n// This thunk middleware will dispatch when user click button AddToCart in ProductScreen\r\n// When click btn AddToCart -> we push history `/cart/id?qty={qty}` to render cartScreen\r\n// => we dispatch it in useEffect of cartScreen component\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  // Instead of fetch data from server (take time),\r\n  // we can getState from reduxStore (getState().productDetails.product)\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  // dispatch action (with payload info) to cartReducers => push itemAdd to state.cart.cartItems\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  // after save card info to redux state -> save card info down to localStorage\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  // 1. dispatch action (with payload info) to cartReducers => delete product from state.cart.cartItems\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: {\r\n      id,\r\n    },\r\n  });\r\n\r\n  // update localStorage after delete a product in cart\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: {\r\n      data,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  ListGroup,\r\n} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Get productID & quantity of product on client route\r\n  const productID = props.match.params.id;\r\n\r\n  // console.log(typeof props.location.search); -> ?qty=1 :string\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split('=')[1])\r\n    : 1;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const removeFromCartHandler = (productID) => {\r\n    // 1. dispatch an thunk middleware to reducer -> change redux state & localStorage\r\n    dispatch(removeFromCart(productID));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    props.history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  // dispatch action to save cartItem to redux state & locastorage (see detail in addToCart function)\r\n  useEffect(() => {\r\n    if (productID) {\r\n      dispatch(addToCart(productID, qty));\r\n    }\r\n  }, [dispatch, productID, qty]);\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is emty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((cartItem, index, arr) => {\r\n              return (\r\n                <ListGroup.Item key={cartItem.product}>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image\r\n                        src={cartItem.image}\r\n                        alt={cartItem.name}\r\n                        fluid='true'\r\n                      ></Image>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Link to={`/product/${cartItem.product}`}>\r\n                        {cartItem.name}\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={2}>${cartItem.price}</Col>\r\n                    <Col md={2}>\r\n                      <Form.Control\r\n                        style={{ padding: 0 }}\r\n                        as='select'\r\n                        value={cartItem.qty}\r\n                        onChange={(e) =>\r\n                          // Should not dispatch addToCart here becase it will fetch product from server again\r\n                          // while this product already existing in redux state & localStorage\r\n                          // => Todo: Need refactor - not use addToCart func middleware here\r\n                          // => use onChange={(e) => updateProductQuantityInCartHandler(cartItem.product, e.target.value)}\r\n                          dispatch(addToCart(cartItem.product, e.target.value))\r\n                        }\r\n                      >\r\n                        {[...Array(cartItem.countInStock)].map(\r\n                          (el, index, arr) => {\r\n                            return (\r\n                              <option key={index + 1} value={index + 1}>\r\n                                {index + 1}\r\n                              </option>\r\n                            );\r\n                          }\r\n                        )}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Button\r\n                        type='button'\r\n                        variant='light'\r\n                        onClick={() => removeFromCartHandler(cartItem.product)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal (\r\n                {cartItems.reduce(\r\n                  (acc, item) => Number(acc) + Number(item.qty),\r\n                  0\r\n                )}\r\n                ) items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { login } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst LoginScreen = (props) => {\r\n  const { history, location } = props;\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer ?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { register } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst RegisterScreen = (props) => {\r\n  const { history, location } = props;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const passwordOnChangeHandler = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value !== confirmPassword) {\r\n      setMessage('Passwords do not match !!!');\r\n    } else {\r\n      setMessage(null);\r\n    }\r\n  };\r\n\r\n  const confirmPasswordOnChangeHandler = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n    if (password !== e.target.value) {\r\n      setMessage('Passwords do not match !!!');\r\n    } else {\r\n      setMessage(null);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match !!!');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type='text'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={passwordOnChangeHandler}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={confirmPasswordOnChangeHandler}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account ?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : `/login`}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (orderData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const userLogin = getState().userLogin;\r\n    const { userInfo } = userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, orderData, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    // there are 2 kind of error\r\n    // 1. error from client, network err -> (use error.message)\r\n    // 2. error response from backend server (http err response) -> (use error.response.data)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${orderId}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          err.response && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getOrderListMy = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data.orders,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data.order,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { getOrderListMy } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ history, location }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // state of ProfileScreen component\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  // get data userDetails from redux state\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {\r\n    loading: loadingUserDetails,\r\n    error: errorUserDetails,\r\n    user,\r\n  } = userDetails;\r\n\r\n  // get data userLogin from redux state\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // get data userUpdateProfile from redux state\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    loading: loadingUpdateProfile,\r\n    error: errorUpdateProfile,\r\n    success,\r\n  } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const {\r\n    loading: loadingOrderListMy,\r\n    error: errorOrderListMy,\r\n    orders,\r\n  } = orderListMy;\r\n\r\n  const passwordOnChangeHandler = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value !== confirmPassword) {\r\n      setMessage('Passwords do not match !!!');\r\n    } else {\r\n      setMessage(null);\r\n    }\r\n  };\r\n\r\n  const confirmPasswordOnChangeHandler = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n    if (password !== e.target.value) {\r\n      setMessage('Passwords do not match !!!');\r\n    } else {\r\n      setMessage(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if user is not logged in\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n      return;\r\n    }\r\n\r\n    if (!user.name) {\r\n      if (loadingUserDetails || errorUserDetails) {\r\n        return;\r\n      } else {\r\n        dispatch(getUserDetails('profile'));\r\n      }\r\n    } else {\r\n      if (user.name !== userInfo.name) {\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n\r\n    // orderListMy.orders in redux state is null/undefined\r\n    if (!orders && !loadingOrderListMy) {\r\n      dispatch(getOrderListMy());\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, history, userInfo, user, orders]);\r\n\r\n  //console.log('Below useEffect has called !');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match !!!');\r\n    } else {\r\n      dispatch(updateUserProfile({ _id: user._id, name, email, password }));\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {errorUserDetails && (\r\n          <Message variant='danger'>{errorUserDetails}</Message>\r\n        )}\r\n        {errorUpdateProfile && (\r\n          <Message variant='danger'>{errorUpdateProfile}</Message>\r\n        )}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {(loadingUserDetails || loadingUpdateProfile) && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type='text'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={passwordOnChangeHandler}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={confirmPasswordOnChangeHandler}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Order</h2>\r\n        {loadingOrderListMy ? (\r\n          <Loader />\r\n        ) : errorOrderListMy ? (\r\n          <Message variant='danger'>{errorOrderListMy}</Message>\r\n        ) : !orders || orders.length === 0 ? (\r\n          <Message variant='info'>You don't have any orders</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => {\r\n                return (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className='fas fa-times'\r\n                          style={{ color: 'red' }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className='fas fa-times'\r\n                          style={{ color: 'red' }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`order/${order._id}`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst ShippingScreen = (props) => {\r\n  const { history } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        {/* Address */}\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        {/* City */}\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        {/* postalCode */}\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        {/* Country */}\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst PaymentScreen = (props) => {\r\n  const { history } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push('./shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        {/* Address */}\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n\r\n            <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import { useEffect } from 'react';\r\nimport { Row, Col, Button, ListGroup, Card, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport {\r\n  ORDER_CREATE_RESET,\r\n  ORDER_LIST_MY_RESET,\r\n} from '../constants/orderConstants';\r\nimport { CART_INFO_RESET } from '../constants/cartConstants';\r\n\r\nconst PlaceOrderScreen = (props) => {\r\n  const { history } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { success, error, order } = orderCreate;\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  // Calculate prices\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => {\r\n      return acc + Number(item.qty) * item.price;\r\n    }, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = addDecimals(\r\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      // Reset orderCreate in redux -> get ready for create a new order\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n      dispatch({ type: CART_INFO_RESET });\r\n      dispatch({ type: ORDER_LIST_MY_RESET });\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong> {cart.shippingAddress.address} ,\r\n                {cart.shippingAddress.postalCode} ,\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>{cart.paymentMethod}</p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = $\r\n                          {addDecimals(Number(item.qty) * Number(item.price))}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>$ {cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>$ {cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>$ {cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>$ {cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {error && (\r\n                <ListGroup.Item>\r\n                  <Message variant='danger'>{error}</Message>\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import { useState, useEffect } from 'react';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport axios from 'axios';\r\nimport { Row, Col, ListGroup, Card, Image, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../../actions/orderActions';\r\nimport {\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_DETAILS_RESET,\r\n} from '../../constants/orderConstants';\r\n\r\nconst OrderScreen = (props) => {\r\n  const { history, match } = props;\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, error, success, order } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    success: successDeliver,\r\n    error: errorDeliver,\r\n  } = orderDeliver;\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  if (success) {\r\n    // Calculate prices\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => {\r\n        return acc + Number(item.qty) * item.price;\r\n      }, 0)\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    // declare func embed paypal sdk js on the page\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n\r\n      // create & setup <script> tag to embed PayPal SDK JS on the page\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    // When orderDetails in redux state is emty, not loading and not have err\r\n    if (!order && !loading && !error) {\r\n      dispatch(getOrderDetails(orderId));\r\n      return;\r\n    }\r\n\r\n    // when orderDetails in redux state !== orderDetails we want display on the page\r\n    if (order && order._id !== orderId) {\r\n      dispatch(getOrderDetails(orderId));\r\n      return;\r\n    }\r\n\r\n    // if orderDetails already fine\r\n    if (order && !order.isPaid) {\r\n      // if order not paid\r\n      if (!window.paypal) {\r\n        // if the PayPal SDK Script has not loaded\r\n        addPayPalScript();\r\n      } else {\r\n        // if the PayPal SDK Script has been load\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n\r\n    // order paied success -> fetch new orderDetails from server and reset orderPay\r\n    if (successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_LIST_MY_RESET });\r\n      dispatch({ type: ORDER_DETAILS_RESET }); // help fetch orderDetails again\r\n    }\r\n\r\n    // order updated to delivered -> fetch new orderDetails from server and reset orderDeliver\r\n    if (successDeliver) {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch({ type: ORDER_LIST_MY_RESET });\r\n      dispatch({ type: ORDER_DETAILS_RESET }); // help fetch orderDetails again\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    order,\r\n    error,\r\n    orderId,\r\n    successPay,\r\n    successDeliver,\r\n  ]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const orderDeliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  // when component mounting fist time -> orderDetails.loading === undefined\r\n  // -> we need orderDetails.success === true to show orderDetails on the page\r\n  return error || errorDeliver ? (\r\n    <Message variant='danger'>{error || errorDeliver}</Message>\r\n  ) : loading || !success ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <h1>Order</h1>\r\n      <p>\r\n        <strong>Name: </strong>\r\n        {order.user.name}\r\n      </p>\r\n      <p>\r\n        <strong>Email: </strong>{' '}\r\n        <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n      </p>\r\n      <p>\r\n        <strong>Order ID: </strong>\r\n        {order._id}\r\n      </p>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong> {order.shippingAddress.address},{' '}\r\n                {order.shippingAddress.city} ,{order.shippingAddress.postalCode}{' '}\r\n                ,{order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = $\r\n                          {addDecimals(Number(item.qty) * Number(item.price))}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>$ {order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>$ {order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>$ {order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>$ {order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={orderDeliverHandler}\r\n                    >\r\n                      Mark As Deliver\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { deleteUser, getListUser } from '../../actions/userActions';\r\nimport Meta from '../../components/Meta';\r\n\r\nconst UserListScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const {\r\n    loading: userDeleteLoading,\r\n    error: userDeleteError,\r\n    success: userDeleteSuccess,\r\n  } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(getListUser());\r\n    } else {\r\n      props.history.push('/login');\r\n    }\r\n  }, [userInfo, userDeleteSuccess, dispatch, props.history]);\r\n\r\n  const userDeleteHandler = (userId) => {\r\n    if (window.confirm('Are you sure to delete user?')) {\r\n      dispatch(deleteUser(userId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`Proshop | Admin`} />\r\n      <h1>Users</h1>\r\n      {loading || userDeleteLoading ? (\r\n        <Loader />\r\n      ) : error || userDeleteError ? (\r\n        <Message variant='danger'>{error || userDeleteError}</Message>\r\n      ) : (\r\n        <Table striped hover responsive bordered className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th>ACTION</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.map((user) => {\r\n              return (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className='fas fa-check'\r\n                        style={{ color: 'green' }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`user/${user._id}/edit`}>\r\n                      <Button\r\n                        variant='light'\r\n                        className='btn-sm btn-outline-info mr-1'\r\n                      >\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      style={{ borderWidth: '2px' }}\r\n                      onClick={() => userDeleteHandler(user._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport {\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userContants';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst UserEditScreen = (props) => {\r\n  const { history, match } = props;\r\n\r\n  const userId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: userUpdateLoading,\r\n    error: userUpdateError,\r\n    success: userUpdateSuccess,\r\n  } = userUpdate;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/');\r\n    }\r\n\r\n    if (userUpdateSuccess) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      history.push('/admin/userlist');\r\n    }\r\n\r\n    // userDetails.user === null/underfined || userDetails.user does not match the user we ưant edit\r\n    // the user we ưant edit has the id that match the id param in the url\r\n    if (!user.name || userId !== user._id) {\r\n      dispatch(getUserDetails(userId));\r\n    } else {\r\n      // userDetails is alright\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, history, userInfo, user, userId, userUpdateSuccess]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userList' className='btn btn-light my-3'>\r\n        <i class='fas fa-arrow-left'> Go Back</i>\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {userUpdateLoading && <Loader />}\r\n        {userUpdateError && (\r\n          <Message variant='danger'>{userUpdateError}</Message>\r\n        )}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type='text'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isAdmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import { useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions';\r\nimport {\r\n  PRODUCT_DELETE_RESET,\r\n  PRODUCT_CREATE_RESET,\r\n} from '../constants/productConstants';\r\nimport Meta from '../components/Meta';\r\n\r\nconst ProductListScreen = (props) => {\r\n  const { history, match } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const KeywordAdminParam = match.params.keyword || '';\r\n  const pageNumberParam = match.params.pageNumber || 1;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, currentPage, totalPages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: productDeleteLoading,\r\n    error: productDeleteError,\r\n    success: productDeleteSuccess,\r\n  } = productDelete;\r\n\r\n  const productCreated = useSelector((state) => state.productCreate);\r\n\r\n  const {\r\n    loading: productCreateLoading,\r\n    error: productCreateError,\r\n    success: productCreateSuccess,\r\n    product: productCreate,\r\n  } = productCreated;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (productDeleteSuccess) {\r\n      dispatch({ type: PRODUCT_DELETE_RESET });\r\n    }\r\n\r\n    if (productCreateSuccess) {\r\n      dispatch({ type: PRODUCT_CREATE_RESET });\r\n      toast.success('Product created successfully');\r\n      history.push(`/admin/product/${productCreate._id}/edit`);\r\n    }\r\n\r\n    dispatch(\r\n      listProducts({ keyword: KeywordAdminParam, pageNumber: pageNumberParam })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userInfo,\r\n    dispatch,\r\n    history,\r\n    productDeleteSuccess,\r\n    productCreateSuccess,\r\n    KeywordAdminParam,\r\n    pageNumberParam,\r\n  ]);\r\n\r\n  const productCreateHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  const productDeleteHandler = (productId) => {\r\n    if (window.confirm('Are you sure to delete product?')) {\r\n      dispatch(deleteProduct(productId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`Proshop | Admin`} />\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={productCreateHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loading || productDeleteLoading || productCreateLoading ? (\r\n        <Loader />\r\n      ) : error || productDeleteError || productCreateError ? (\r\n        <Message variant='danger'>\r\n          {error || productDeleteError || productCreateError}\r\n        </Message>\r\n      ) : products.length === 0 ? (\r\n        <Message variant='info'>There are no product</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped hover responsive bordered className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {products.map((product) => {\r\n                return (\r\n                  <tr key={product._id}>\r\n                    <td>{product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>${product.price}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n                    <td>\r\n                      <LinkContainer to={`/product/${product._id}`}>\r\n                        <Button\r\n                          variant='light'\r\n                          className='btn-sm btn-outline-info mr-1 mb-1'\r\n                        >\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                        <Button\r\n                          variant='light'\r\n                          className='btn-sm btn-outline-info mr-1 mb-1'\r\n                        >\r\n                          <i className='fas fa-edit'></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n\r\n                      <Button\r\n                        variant='danger'\r\n                        className='btn-sm mb-1'\r\n                        style={{ borderWidth: '2px' }}\r\n                        onClick={() => productDeleteHandler(product._id)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate\r\n            totalPages={totalPages}\r\n            currentPage={currentPage}\r\n            keyword={KeywordAdminParam}\r\n            isAdmin={true}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { getProductDetails, updateProduct } from '../actions/productActions';\r\nimport {\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_UPDATE_RESET,\r\n} from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [productData, setProductData] = useState({\r\n    name: '',\r\n    image: '',\r\n    price: 0,\r\n    brand: '',\r\n    category: '',\r\n    countInStock: 0,\r\n    description: '',\r\n  });\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const { loading, error, product } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  const {\r\n    loading: productUpdateLoading,\r\n    error: productUpdateError,\r\n    success: productUpdateSuccess,\r\n  } = useSelector((state) => state.productUpdate);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (productUpdateSuccess) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch({ type: PRODUCT_DETAILS_RESET });\r\n      history.push('/admin/productlist');\r\n    }\r\n\r\n    if (!product.name || product._id !== match.params.id) {\r\n      dispatch(getProductDetails(match.params.id));\r\n    } else {\r\n      setProductData({\r\n        ...productData,\r\n        name: product.name,\r\n        image: product.image,\r\n        price: product.price,\r\n        brand: product.brand,\r\n        category: product.category,\r\n        countInStock: product.countInStock,\r\n        description: product.description,\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, history, match, userInfo, product, productUpdateSuccess]);\r\n\r\n  const productDataOnChangeHandler = (e) => {\r\n    setProductData({\r\n      ...productData,\r\n      // Computed property names (ES2015)\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const inputFileHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) setProductData({ ...productData, image: file.name });\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const file = document.getElementById('inputFile').files[0];\r\n    console.log('file', file);\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n      setUploading(true);\r\n\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.post('/api/upload', formData, config);\r\n        console.log('data.filePath', data.filePath);\r\n\r\n        setUploading(false);\r\n        dispatch(\r\n          updateProduct({\r\n            _id: product._id,\r\n            ...productData,\r\n            image: data.filePath,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n        setUploading(false);\r\n      }\r\n    } else {\r\n      dispatch(updateProduct({ _id: product._id, ...productData }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productList' className='btn btn-light my-3'>\r\n        <i className='fas fa-arrow-left'></i> Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loading || productUpdateLoading ? (\r\n          <Loader />\r\n        ) : error || productUpdateError ? (\r\n          <Message variant='danger'>{error || productUpdateLoading}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type='text'\r\n                name='name'\r\n                placeholder='Enter name'\r\n                value={productData.name}\r\n                onChange={productDataOnChangeHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='image'\r\n                placeholder='Enter image url'\r\n                value={productData.image}\r\n                onChange={productDataOnChangeHandler}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='inputFile'\r\n                onChange={inputFileHandler}\r\n                className='mt-2'\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                name='price'\r\n                placeholder='Enter price'\r\n                value={productData.price}\r\n                onChange={productDataOnChangeHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='brand'\r\n                placeholder='Enter brand'\r\n                value={productData.brand}\r\n                onChange={productDataOnChangeHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                name='countInStock'\r\n                placeholder='Enter countInStock'\r\n                value={productData.countInStock}\r\n                onChange={productDataOnChangeHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='category'\r\n                placeholder='Enter category'\r\n                value={productData.category}\r\n                onChange={productDataOnChangeHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='description'\r\n                placeholder='Enter description'\r\n                value={productData.description}\r\n                onChange={productDataOnChangeHandler}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderList } from '../actions/orderActions';\r\nimport Meta from '../components/Meta';\r\n\r\nconst OrderListScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(getOrderList());\r\n    } else {\r\n      props.history.push('/login');\r\n    }\r\n  }, [dispatch, props.history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`Proshop | Admin`} />\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : orders.length === 0 ? (\r\n        <Message>There are no order!</Message>\r\n      ) : (\r\n        <Table striped hover responsive bordered className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Date</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {orders.map((order) => {\r\n              return (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button\r\n                        variant='light'\r\n                        className='btn-sm btn-outline-info'\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen/';\r\nimport UserListScreen from './screens/UserListScreen/';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <ToastContainer position='top-right' autoClose={3000} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist/'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/page/:pageNumber'\r\n            component={ProductListScreen}\r\n          />\r\n          <Route\r\n            path='/admin/productlist/search/:keyword'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/search/:keyword/page/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route\r\n            path='/admin/product/:id/edit'\r\n            component={ProductEditScreen}\r\n            exact\r\n          />\r\n          <Route path='/search/:keyword/' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n          />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './reduxStore';\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}